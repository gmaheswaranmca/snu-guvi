
Solution Techniques:

1. Sorting-based Hashing:
    - For each string, sort its characters. Use the sorted string as a key in a hash map (dictionary).
    - Group all strings with the same sorted key.
    - Time Complexity: O(n * k log k), where n is the number of strings and k is the average length of a string (due to sorting).
    - Space Complexity: O(n * k), for storing the groups.

2. Character Count Hashing:
    - For each string, count the frequency of each character (26 lowercase letters). Use the tuple of counts as a key in a hash map.
    - Group all strings with the same character count key.
    - Time Complexity: O(n * k), where n is the number of strings and k is the average length of a string.
    - Space Complexity: O(n * k), for storing the groups.


---

