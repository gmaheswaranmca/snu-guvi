"Shortest Path in Weighted Graph", 
"Given a weighted directed graph, 
find the shortest path from a source node to all other nodes 
using Dijkstra’s algorithm.", 
"Medium", 
"LeetCode, HackerRank, Google"

----------------------------------

Problem Title:
Shortest Path in Weighted Directed Graph

Problem Description:
Given a weighted directed graph with N nodes and M edges, and a source node S, find the shortest distance from the source node S to every other node in the graph. If a node is unreachable from the source, output -1 for that node. The graph does not contain negative weight edges.

Input Format:
- The first line contains three integers N, M, and S — the number of nodes, the number of edges, and the source node (1-based indexing).
- The next M lines each contain three integers u, v, w — representing a directed edge from node u to node v with weight w.

Output Format:
- Output N space-separated integers, where the i-th integer is the shortest distance from S to node i (1-based). If a node is unreachable, output -1 for that node.

Constraints:
- 1 ≤ N ≤ 10^5
- 1 ≤ M ≤ 2×10^5
- 1 ≤ u, v ≤ N
- 1 ≤ w ≤ 10^9
- 1 ≤ S ≤ N

Sample Input:
5 6 1
1 2 2
1 3 4
2 3 1
2 4 7
3 5 3
4 5 1

Sample Output:
0 2 3 9 6

Explanation: 1:2(2),3(4) | 2:3(1),4(7) | 3:5(3) | 4:5(1) ==> [0, I:2, I:4:3, I:9, I:6:10] 
- The shortest path from 1 to 1 is 0.
- The shortest path from 1 to 2 is 2.
- The shortest path from 1 to 3 is 3 (1->2->3).
- The shortest path from 1 to 4 is 9 (1->2->4).
- The shortest path from 1 to 5 is 6 (1->3->5).
```
n=5,m=6,s=1
1->2:2,1->3:4,2->3:1,2->4:7,3->5:3,4->5:1
     
	  1   2   3   4   5
dist[ 0   2   3   9   6]
   
q=, , , 
	(d=0,v=1):
		neig: 2 d=inf vs (0 + 2 = 2) 
			  3	d=inf vs (0 + 4 = 4) 
	(d=2,v=2):
		neig: 3:d=4 vs (2 + 1 = 3)
			  4:inf vs (2 + 7 = 9) -> 9
	(d=3, v=3):
		neig: 5:d=inf vs (3 + 3 = 6) -> 6
	(d=4,v=3) :5:d=6 vs (4 + 3 = 7) xxxx
	(d=6, v=5):not applicable
	(d=9, v=4):5 d=6 vs (9 + 1 = 10) xxxx
```

Difficulty:
Medium

Five Test Cases:
Test Case 1:
Input:
4 4 1
1 2 1
2 3 2
3 4 3
1 4 10
Output:
0 1 3 6

Test Case 2:
Input:
3 1 2
2 3 5
Output:
-1 0 5

Test Case 3:
Input:
6 7 3
3 1 2
3 2 4
1 4 7
2 4 1
4 5 3
5 6 2
2 6 10
Output:
2 4 0 5 8 10

Test Case 4:
Input:
5 3 5
5 1 2
5 2 3
2 3 4
Output:
2 3 7 -1 0

Test Case 5:
Input:
2 0 1
Output:
0 -1

----------------------------------

