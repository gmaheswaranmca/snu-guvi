"Detect Negative Weight Cycle", 
"Given a graph with negative edge weights, 
determine if there is a negative weight cycle using Bellman-Ford algorithm.", 
"Hard", 
"Codeforces, Amazon, Microsoft"

----------------------------------

Problem Title: Detect Negative Weight Cycle

Problem Description:
Given a directed weighted graph with N vertices and M edges, some of which may have negative weights, determine whether the graph contains a negative weight cycle. A negative weight cycle is a cycle whose total sum of edge weights is negative. Use the Bellman-Ford algorithm to detect such a cycle.

Input Format:
- The first line contains two integers N and M, the number of vertices and edges respectively.
- The next M lines each contain three integers u, v, and w, denoting an edge from vertex u to vertex v with weight w.

Output Format:
- Output "YES" if there is a negative weight cycle in the graph, otherwise output "NO".

Constraints:
- 1 ≤ N ≤ 500
- 1 ≤ M ≤ 2000
- 1 ≤ u, v ≤ N
- -10^5 ≤ w ≤ 10^5

Sample Input 1:
3 3
1 2 4
2 3 -10
3 1 3

Sample Output 1:
YES

Explanation 1:
The cycle 1 -> 2 -> 3 -> 1 has a total weight of 4 + (-10) + 3 = -3, which is negative.

Sample Input 2:
4 4
1 2 1
2 3 2
3 4 3
4 1 4

Sample Output 2:
NO

Explanation 2:
There are no cycles with negative total weight.

Difficulty:
Hard

Five Test Cases:
Test Case 1:
Input:
2 2
1 2 -1
2 1 -1
Output:
YES

Test Case 2:
Input:
5 6
1 2 2
2 3 2
3 4 2
4 5 2
5 1 -9
1 3 1
Output:
YES

Test Case 3:
Input:
3 2
1 2 5
2 3 7
Output:
NO

Test Case 4:
Input:
4 4
1 2 2
2 3 2
3 4 2
4 2 -7
Output:
YES

Test Case 5:
Input:
6 7
1 2 3
2 3 4
3 4 5
4 5 6
5 6 7
6 1 8
2 5 -20
Output:
YES

----------------------------------
